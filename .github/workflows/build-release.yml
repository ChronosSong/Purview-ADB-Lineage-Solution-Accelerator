name: Build and Release

on:
  create:
  pull_request:
    branches: [ main, release/* ]
    paths:
      - '**.cs'
      - '**.csproj'
      - 'tests/integration/**'
  workflow_dispatch:
    inputs:
      tags:
        description: 'Flag as workflow dispatch'
        required: true
        type: boolean

env:
  DOTNET_VERSION: '6.x.x' # The .NET SDK version to use
  REPO: "function-app/adb-to-purview/src/"
  TEST: "function-app/adb-to-purview/tests/unit-tests"

jobs:
  meta:
    name: Meta Information
    runs-on: ubuntu-latest
    steps:
    - name: Metadata about this action
      run: | 
        echo "Github Event Name: ${{ github.event_name }}" 
        echo "Github Ref: ${{ github.ref }}"
        echo "Github Ref Type: ${{ github.ref_type }}"
        echo "Github Tags: ${{ inputs.tags }}"

  build:
    if: |
      github.event_name == 'pull_request' ||
      (github.event_name == 'create' && github.ref_type == 'tag') ||
      ${{github.event_name == 'create' && inputs.tags}}
    name: build-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
      
    - name: Install dependencies
      run: dotnet restore ${{ env.REPO }}
      
    - name: Build
      run: dotnet build ${{ env.REPO }} --configuration Release --no-restore
      
    - name: Test
      run:  dotnet test ${{ env.TEST }}
      
    - name: Publish
      run: dotnet publish ${{ env.REPO }}
    
    - name: Confirm Mappings Match
      run: python tests/deployment/test_arm_mapping_matches_json.py

    - name: Display structure of downloaded files
      run: | 
        mkdir ~/artifact 
        Compress-Archive -Path D:/a/Purview-ADB-Lineage-Solution-Accelerator/Purview-ADB-Lineage-Solution-Accelerator/function-app/adb-to-purview/src/bin/Debug/net6.0/publish/* -DestinationPath ~/artifact/FunctionZip.zip
      
    - name: Upload Function Zip Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: FunctionZip
        path: ~/artifact/FunctionZip.zip

    - name: Create One Line OlToPurviewMappings
      run: | 
        mkdir ~/artifact-mappings
        python ./deployment/util/mappings-remove-spaces.py ./deployment/infra/OlToPurviewMappings.json > ~/artifact-mappings/one-line-mappings.json
        ls ~/artifact-mappings

    - name: Upload One Line OlToPurviewMappings Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Mappings
        path: ~/artifact-mappings/one-line-mappings.json

  createRelease:
    name: Create Release
    if: ${{ github.event_name == 'create' && github.ref_type == 'tag' }}
    runs-on: ubuntu-latest
    environment: 
      name: ReleaseEnvironment
    steps:
    - uses: actions/checkout@v3

    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: FunctionZip
        path: ~/artifacts

    - name: Create Release
      uses: ncipollo/release-action@v1
      if: github.ref_type == 'tag'
      with:
        artifacts: ~/artifacts/FunctionZip.zip
        token: ${{ secrets.GITHUB_TOKEN }}
